library(ape)

fasta <- read.FASTA("~/Desktop/100k/aligned.fasta")


names <- names(fasta)
names <- gsub("\\|.*", "", names)

vcf_names <- list.files("~/Desktop/100k/vcf/")
vcf_names <- gsub("\\..*", "", vcf_names)

filter_fasta <- fasta[names %in% vcf_names]

filter_names <- names(filter_fasta)
filter_dates <- sub(".*\\|", "", filter_names)
filter_names <- sub("\\|.*", "", filter_names)

sum(vcf_names %in% names)

names(filter_fasta) <- filter_names

write.FASTA(filter_fasta, "~/Desktop/100k/aligned.fasta")

dates <- as.Date(filter_dates)
dates <- as.numeric(difftime(dates, as.Date("2020-01-01"), units = "days"))

dates <- data.frame(cases = filter_names, date = dates)

write.csv(dates, file = "~/Desktop/100k/date.csv", quote = F, row.names = F)

### Develop initial ancestry based on lineage

meta <- read.csv("~/Desktop/100k/metadata.csv")
meta <- meta[match(filter_names, meta$case), ]
meta <- meta[, c("case", "pango_lineage_full")]
row.names(meta) <- NULL

# Delete annotations of lineages
meta$pango_lineage_full <- sub(" .*", "", meta$pango_lineage_full)

# Find ancestral lineage of each lineage. Hopefully we get a tree...
lins <- sort(unique(meta$pango_lineage_full))

split_lins <- sapply(lins, strsplit, split = "\\.", USE.NAMES = F)

anc_lins <- c()
for (i in 1:length(split_lins)) {
  older <- which(sapply(split_lins, function(s, t){all(s == t[1:length(s)])}, t = split_lins[[i]], USE.NAMES = F))
  older <- setdiff(older, i)
  if(length(older) > 0){
    anc_lins[i] <- lins[older][which.max(sapply(split_lins[older], length))]
  }else{
    anc_lins[i] <- NA
  }

}

## Next, find a root for each lineage
roots <- c()
for (i in 1:length(lins)) {
  cases <- meta$case[meta$pango_lineage_full == lins[i]]
  times <- dates$date[match(cases, dates$cases)]
  roots[i] <- cases[which.min(times)]
}

## Finally, make the ancestry vector!
h <- c()
for (i in 1:nrow(dates)) {
  # If not a root, assign ancestor to be root of cluster
  if(!(meta$case[i] %in% roots)){
    lin <- meta$pango_lineage_full[i]
    root <- roots[which(lins == lin)]
    h[i] <- which(meta$case == root)
  }else{
    lin <- anc_lins[which(roots == meta$case[i])]
    if(is.na(lin)){
      h[i] <- 0
    }else{
      root <- roots[which(lins == lin)]
      h[i] <- which(meta$case == root)
    }
  }
  #print(i)
}

h <- h + 1
h <- c(NA, h)

write.table(h, file = "~/Desktop/100k/ancestry.csv", quote = F, row.names = F, col.names = F)




